// -*- mode: C++; tab-width: 4; c-basic-offset: 4 -*-

/**
 * @file
 *
 * @par PACKAGE
 * Robin
 *
 * Regular method implementation.
 */

namespace Robin {


template < class CallableBase >
RegularMethod<CallableBase>::RegularMethod()
{
}

template < class CallableBase >
RegularMethod<CallableBase>::~RegularMethod()
{
}

/**
 * Calls the underlying Callable object with the
 * instance object as the first argument.
 */
template < class CallableBase >
scripting_element 
RegularMethod<CallableBase>::callUpon(Instance& self,
									  const ActualArgumentList& args) const
{
	ActualArgumentList wargs;  /* "Wherever the Warg howls, 
								  there also the Orc prowls." (Tolkien) */

	scripting_element myself = RegularMethodInternals::instanceElement(self);
	wargs = args;
	wargs.insert(wargs.begin(), myself);  // prepend self
	// Invoke a regular call
	scripting_element result = this->call(wargs);
	// Free the 'self' object
	RegularMethodInternals::release(myself);
	// Return the value generated by the call
	return result;
}


} // end of namespace Robin
